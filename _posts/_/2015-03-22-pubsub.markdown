---
layout: post
title:  "Pub/Sub Design Pattern"
date:   2015-03-22 23:33:00
categories:
- development
- js
comments: true
---

This week I’ve been pretty hooked on learning more about Design Patterns & structuring my code in an organized fashion. I’ve been watching videos on structuring code and I’ve decided to delve in a little more into a particular pattern that the video went over.

PUB/SUB
It took me a while to wrap my head around what the pub/sub pattern is like most things reading and doing are two different forms of understand. I’d also state that I’m no very little of the pubsub design pattern so if I get anything wrong please correct me as I would greatly appreciate it.

Pub/Sub is a series of functions and events that are connected via terms. Let me elaborate a little more because I have an tendency to overly simplify things (or overly complicate things).  For the example below, I’ve used Jquery Tiny Pubsub, I’d highly recommend using it (https://github.com/cowboy/jquery-tiny-pubsub).  I’ve created simple cart functionality were items can be added or removed to the cart.

At first I had no idea what I was doing but after tinkering with this a while everything connected.
<script src="https://gist.github.com/Steveiscreative/2bad4ae52850d3ec284d.js"></script>

First you establish your subscriptions. The subscriptions connect the terms and the functions associated with the terms.
So, the terms cart/add is connected to the addToCart function and the cart/remove to it’s function. Once these where established, I started to work on the functionality, so when a button is clicked on a given item, the id and name is passed into an object and then published the action with the giving data. What the item is published to is determined if the id exist in the CACHE variable. If the id is in the cache then it removes the item, then publishes to the cart/remove term, if is it isn’t then the id is added to the cache then the publishes to the cart/add.

So wtf?
So after creating this example, I had to say I still had no idea what the hell was going on so. Abstractions are meant to leave

Takeaways, questions and more.
I tend to see the same examples for pubsub (shopping cart, message logger, etc), what are some other (real world) examples beside a shopping cart. How have they been used? I know that this design pattern is a driving component in backbone. After learning more about this, a lot of it makes more sense.

I have an idea of how terms are connecting to functions but somethings not registering. I’ll probably follow up with a post after everything registers.
